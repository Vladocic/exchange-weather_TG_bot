import requests
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from db_manager import add_request_to_db
from dotenv import load_dotenv





# —Å—Ç–∞—Ä—Ç –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
async def weather(update:Update, context:CallbackContext):
    keyboard = [
        [InlineKeyboardButton('üèñÔ∏è –ü—Ö—É–∫–µ—Ç' ,callback_data='Phuket'), InlineKeyboardButton('üåÜ –ë–∞–Ω–≥–∫–æ–∫' ,callback_data='Bangkok') ],
        [InlineKeyboardButton('üèôÔ∏è –ú–æ—Å–∫–≤–∞' ,callback_data='Moscow'), InlineKeyboardButton('üåâ –ü–∏—Ç–µ—Ä' ,callback_data='Saint Petersburg') ],
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text("–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥", reply_markup=reply_markup)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä–æ–¥–∞ –∏ –≤—ã–≤–æ–¥ –ø–æ–≥–æ–¥—ã
async def choose_city(update:Update, context:CallbackContext):
    query = update.callback_query    
    await query.answer()
    city = query.data
    weather_info, icon = await get_weather(city) 
    if icon:
        await update.callback_query.message.reply_photo(icon, caption=weather_info)
    else:
        await update.callback_query.message.reply_text(weather_info)

    username = update.callback_query.from_user.username
    full_name = update.callback_query.from_user.first_name
    add_request_to_db(username, full_name, '–ü–æ–≥–æ–¥–∞') 



# –ø–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ –ê–ü–ò
async def get_weather(city):
    load_dotenv()
    WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")

    url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru'

    try:
        response = requests.get(url)
        answer = response.json()
        
        if "weather" in answer and "main" in answer:
            weather_icon = answer["weather"][0]["icon"]
            icon_url = f"https://openweathermap.org/img/wn/{weather_icon}@2x.png"
            return (
                f'üèô –ì–æ—Ä–æ–¥: {answer["name"]}\n'
                f'‚òÅ {answer["weather"][0]["description"].capitalize()}\n'
                f'üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(answer["main"]["temp"])}¬∞C\n'
                f'ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {round(answer["main"]["feels_like"])}¬∞C\n',
                icon_url
            )
        else:
            return "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."
        
    except requests.exceptions.RequestException as e:
        return f"üö´ –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}"
    
